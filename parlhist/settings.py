"""
    parlhist/parlhist/settings.py

    Copyright 2023-2025 Martijn Staal <parlhist [at] martijn-staal.nl>
    Copyright 2025 Universiteit Leiden <m.a.staal [at] law.leidenuniv.nl>

    Available under the EUPL-1.2, or, at your option, any later version.

    SPDX-License-Identifier: EUPL-1.2

    Django settings for parlhist project.

    Generated by 'django-admin startproject' using Django 4.2.4.

    For more information on this file, see
    https://docs.djangoproject.com/en/5.0/topics/settings/

    For the full list of settings and their values, see
    https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from os import getenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$74)yfs=rkq1596)nf%-+pl9(dqi-xu=5nb=ls6gv&wz#-qzw1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'parlhistnl.apps.ParlhistnlConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'parlhist.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'parlhist.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "parlhist_db",
        "USER": "parlhist_user",
        "PASSWORD": "verysecure",
        "HOST": "127.0.0.1",
        "PORT": "5432",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'nl-nl'

TIME_ZONE = 'Europe/Amsterdam'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    "formatters": {
        "verbose": {
            "format": "{levelname} - {asctime} - {processName}.{process:d} - {module}:{lineno:d} - {funcName}: {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'file': {
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': 'parlhist.log'
        }
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'DEBUG',
    },
}

CELERY_BROKER_URL = "amqp://"
CELERY_RESULT_BACKEND = "rpc://"
CELERY_IMPORTS = [
    "parlhistnl.crawler.staatsblad"
]

PARLHIST_CRAWLER_MEMOIZE_PATH = "./memoized-requests"
PARLHIST_CRAWLER_DEFAULT_USE_MEMOIZATION = True
PARLHIST_OPENSEARCH_ENABLED = True
PARLHIST_OPENSEARCH_HTTP_AUTH_USER = getenv("PARLHIST_OPENSEARCH_HTTP_AUTH_USER", "admin")
PARLHIST_OPENSEARCH_HTTP_AUTH_PASSWORD = getenv("PARLHIST_OPENSEARCH_HTTP_AUTH_PASSWORD", "changeme")
PARLHIST_OPENSEARCH_HTTP_AUTH = (PARLHIST_OPENSEARCH_HTTP_AUTH_USER, PARLHIST_OPENSEARCH_HTTP_AUTH_PASSWORD)
PARLHIST_OPENSEARCH_HOSTS = [{"host": "localhost", "port": 9200}]
PARLHIST_OPENSEARCH_VERIFY_CERTS = False
